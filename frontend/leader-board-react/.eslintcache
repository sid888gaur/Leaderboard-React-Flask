[{"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/index.js":"1","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/reportWebVitals.js":"2","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/App.js":"3","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/EnterMarks.js":"4","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/ViewLeaderboard.js":"5","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/Home.js":"6","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/Navigation.js":"7"},{"size":197,"mtime":1609924728479,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1609917266798,"results":"10","hashOfConfig":"9"},{"size":631,"mtime":1610102014100,"results":"11","hashOfConfig":"9"},{"size":3616,"mtime":1610101221792,"results":"12","hashOfConfig":"9"},{"size":2676,"mtime":1610112397201,"results":"13","hashOfConfig":"9"},{"size":285,"mtime":1610101983231,"results":"14","hashOfConfig":"9"},{"size":542,"mtime":1610102004692,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4k6hb2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/index.js",[],["32","33"],"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/reportWebVitals.js",[],"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/App.js",[],"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/EnterMarks.js",["34","35"],"import React from 'react';\nimport axios from 'axios';\n\nclass EnterMarks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rollno: 0,\n            name: '',\n            pmarks: 0,\n            cmarks: 0,\n            mmarks: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        alert('Submiting information');\n        event.preventDefault();\n\n        this.state.total = Number(this.state.pmarks)+Number(this.state.cmarks)+Number(this.state.mmarks);\n        this.state.percent = Number(this.state.total)/3;\n\n        var data = this.state\n\t\tvar postUrl = \"/api/enterMarks\";\n\t\taxios.post(postUrl, data, {\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\n    }\n\n    handleChange(event){\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({\n            [nam] : val\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Roll Number:\n                    <input\n                        name = \"rollno\"\n                        type = \"number\"\n                        value = {this.state.rollno}\n                        onChange = {this.handleChange} />\n                </label>\n                <br />\n\n                <label>\n                    Name:\n                    <input\n                        name = \"name\"\n                        type = \"text\"\n                        value = {this.state.name}\n                        onChange = {this.handleChange} />\n                </label>\n                <br />\n\n                <label>\n                    Physics:\n                    <input\n                        name = \"pmarks\"\n                        type = \"number\"\n                        value = {this.state.pmarks}\n                        onChange = {this.handleChange} />\n                </label>\n                <br />\n\n                <label>\n                    Chemistry:\n                    <input\n                        name = \"cmarks\"\n                        type = \"number\"\n                        value = {this.state.cmarks}\n                        onChange = {this.handleChange} />\n                </label>\n                <br />\n\n                <label>\n                    Maths:\n                    <input\n                        name = \"mmarks\"\n                        type = \"number\"\n                        value = {this.state.mmarks}\n                        onChange = {this.handleChange} />\n                </label>\n                <br />\n\n                <label>\n                    Total:\n                    <input \n                        name = \"total\"\n                        type = \"number\"\n                        value = {Number(this.state.pmarks)+Number(this.state.cmarks)+Number(this.state.mmarks)} \n                        readOnly = {true} />\n                </label>\n                <br />\n\n                <label>\n                    Percent:\n                    <input \n                        name = \"percent\"\n                        type = \"number\"\n                        value = {(Number(this.state.pmarks)+Number(this.state.cmarks)+Number(this.state.mmarks))/3} \n                        readOnly = {true}/>\n                </label>\n                <br />\n\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nexport default EnterMarks;","/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/ViewLeaderboard.js",[],"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/Home.js",[],"/home/gaur/Documents/Work/AlmaBetter/Leaderboard-React-Flask/frontend/leader-board-react/src/pages/Navigation.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":25,"column":9,"nodeType":"42","endLine":25,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":26,"column":9,"nodeType":"42","endLine":26,"endColumn":19},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]